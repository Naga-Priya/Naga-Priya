Day 3:
------
What is a webserver?
When u submit the form, it goes to webserver. Webserver has business logic. sometimes the processing might need data from data base, so server will communicate with DB layer and fetch the data needed and return the result to browser.

Webserver tech Java,.net,php
Data layer: SQL cerver, Oracle, mySql

HTML Elements:
1. Input: any input like testbox, dropdown e.t.c
label for=<id> to uniquely specify a label for the textbox.

Attributes:
-----------
readonly 
required

Name attribute is used to group radio buttons together.
Since Id is unique for element, we use id to attach label to elements.
attributes: type, id, name, value, checked

<fieldset> and <legend>
Fieldset is a bordered area, Legend is a caption for the field set.

??
button onclick()

In datalist, user can use the values as suggestions and can choose to enter a value of his own.

date picker: input type = date
email: input type = email
type = range

Reference: https://www.w3schools.com/html/

Assignment1:
Monthly expense report: 
Create a form to put values for  fields (Mortgage <text>, gas<text>,childcare <text>, Insurance <text>, utility <text>, Misc <text>)
Upon Save, go to Details.html page, show all the inputs in tabular form. (We need to know Java script to fetch the values from first form)
Options: customize the form to try out as many elements as possible. E.g, some expense is for monthly, sopme are for annually. try using radio buttons and check boxes to choose options.
try using column span, row span

Day 4:
<iframes>
<meta> tag is information for browser, it is used for SEA, search engine optimization
it has attributes like:
name and content which used to provide some keywords to search engine to identify our web page
<meta charset ="utf-8">
<meta name="author" content="Harry Potter">

<emojis>
Emoji's are characters in utf-8, they look like code numbers, when included in HTML, it displays emoji's at run time. the code is in decimal<prefix &#> or hex decimal<prefix &#x>

Fevicon<link rel="icon" type="image/x-icon" href="path of .ico file">
This is displayed next to title

type can be icon, or png e.t.c but icon is the standard.

*BROWSER specific*
Favicon of size 16X16 will not be displayed on Chrome.
So always choose icon of size 48X48 or above

Entities:
--------
when special character is needed use entities 
e.g: '&dollar' to display $  sign
since '<' is reserved for HTML tags, using it in text might not display in different browsers, so use &lt instead.
https://www.w3schools.com/html/html_entities.asp

<Form action="Which page to go" method="post">
by default when a form is submitted the method is GET, this displays all the data in form elements. To avoid exposing the data choose methods. POST will not show the data.

Emojis
-------


HTML Vs HTML 5
***broke the dependency on FLASH, we can use canvas tag instead hence faster
Supported by all browsers
New tags like header, footer, nav
Responsive screen using meta tab

What is semantic element?

Tags VS elemenbts

Entities in HTML

id Vs class

Feb21, Monday
-------------

CSS- Cascading style sheet
Saves time and formats uniformly throughout the site
reduces tag attributes, hence pages load faster
Easy to maintain, changes can be made globally quicker
Multiple device compatability- mobile, web
Cons: overriding style locally needs more work? how is it done?

CSS syntax:
We write style rules that are applied to targeted elements in our HTML document
3 parts of style rule:
selector- any HTML tag that identifies the elements to which a style is applied, e.g: <p><Table>
Property: the attribute that is customized by style rule. e.g: color, border
Value: new value to the property e.g: blue, 1

e.g: h1 {
    color:blue;
    font-size:18px;}

types:
inline CSS- adding style attribues inside HTML document.
e.g: <h1 style="Color:red;">This is a new header</hl>
Pro: overrides global CSS and has high precedence.
cons: cannot be applied globally, we have to add style attribute for each tag.

Embedded or Internal CSS:
style rules are placed inside the head section, so all the elements in this HTML document will be affected by this style rules.

External CSS:
we write a css file and link it to our HTML document using <link rel="stylesheet" href="<css file path/name>">
***To impose a style in external CSS over inline CSS, use '
!important' attribute in the style rule in external CSS. this instructs browser to ignore inline CSS.***

Working with Text in CSS:
Properties
1. color a color name like red/ a hex value like #ff0000/an RGB value like rgb(255,0,0)
2. Background-color -changes the background color of text element
3. Text-align: center/left/right/justify
4. Text-direction: changes direction of text (left to right to arabic format, right to left)
5. Text-decoration: none/overline/line-through/under-line
6. Text-transform: uppercase/lowercase/capitalize;
7. text-indent: add/remove space before the test
                text-indent: 40px; //leaves 40 pixels before the element
8. letter-spacing: adds space between characters in words
9. line-height
10. word-spacing:
11. text-shadow: 2px 2px (adds horiaontal and verical shadow)
                 
Developer options:
------------------
shortcut f12, in chrome
right click on any element in the browser-> select inspect, choose elements (if another tab is selected on top right frame), inspect the styles applied in the bottom right frame. 
We can use this to check and try out style on the go but the changes wont reflect on the HTML document. 

Console window is used for Java Script

Feb 22: CSS
------------
CSS Selectors
* - everything
#<id>
.<class>
tag1,tag2
div>p -selects onlt the p tags inside div tag
div+p - select first p element after div tag
p ~ ul - all ul element before P element

** An element can have multiple classes, styling can be applied from multiple rules using multiple classes**

Div - divides the contents into multiple blocks or divisions. It includes a new line between div sections.
Span - smaller divisions, if we want to divide with a line 

*text align, margin can be used for center aligning. One of them might work*

Pseudo classes - Styling based on state of a element:
:active
::after
::

':nth-child(n)' -Style based on order of elements

Text Styling:
font-weight
font-variant
font-size - Abolute (used for smaller screens)/relative
**Use link href to import google fonts**

